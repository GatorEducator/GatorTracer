{
    "organizations": [
        {
            "org-name": "allegheny-college-sandbox",
            "repositories": [
                {
                    "repo-name": "hey-you-be-positive",
                    "insights": []
                },
                {
                    "repo-name": "branch-write-test-Yanqiao4396",
                    "insights": [
                        {
                            "file": "insight-20230628-23",
                            "json": "{\"amount_correct\": 5, \"percentage_score\": 83, \"checks\": [{\"description\": \"Ensure that the review.md file exists in the writing/ directory\", \"check\": \"ConfirmFileExists\", \"status\": true}, {\"description\": \"Complete all TODOs, remove the TODO markers, and rewrite comments for review.md\", \"check\": \"MatchFileFragment\", \"options\": {\"fragment\": \"TODO\", \"count\": 0, \"exact\": true}, \"status\": false, \"diagnostic\": \"Found 1 fragment(s) in the review.md or the output while expecting exactly 0\"}, {\"description\": \"Delete the 'Add Your Name Here' prompt in the reflection file\", \"check\": \"MatchFileFragment\", \"options\": {\"fragment\": \"Add Your Name Here\", \"count\": 0, \"exact\": true}, \"status\": true}, {\"description\": \"Write a minimum number of meaningful words in the reflection\", \"check\": \"CountFileWords\", \"options\": {\"count\": 500, \"exact\": false}, \"status\": true}, {\"description\": \"Confirm that the markdown file has a at least a minimum number of headers\", \"check\": \"CountMarkdownTags\", \"options\": {\"tag\": \"heading\", \"count\": 15, \"exact\": false}, \"status\": true}, {\"description\": \"Have at least a specific minimum of commits in repository\", \"check\": \"CountCommits\", \"options\": {\"count\": 5}, \"status\": true}]}"
                        },
                        {
                            "file": "insight-20230629-00",
                            "json": "{\"amount_correct\": 5, \"percentage_score\": 83, \"checks\": [{\"description\": \"Ensure that the review.md file exists in the writing/ directory\", \"check\": \"ConfirmFileExists\", \"status\": true}, {\"description\": \"Complete all TODOs, remove the TODO markers, and rewrite comments for review.md\", \"check\": \"MatchFileFragment\", \"options\": {\"fragment\": \"TODO\", \"count\": 0, \"exact\": true}, \"status\": false, \"diagnostic\": \"Found 1 fragment(s) in the review.md or the output while expecting exactly 0\"}, {\"description\": \"Delete the 'Add Your Name Here' prompt in the reflection file\", \"check\": \"MatchFileFragment\", \"options\": {\"fragment\": \"Add Your Name Here\", \"count\": 0, \"exact\": true}, \"status\": true}, {\"description\": \"Write a minimum number of meaningful words in the reflection\", \"check\": \"CountFileWords\", \"options\": {\"count\": 500, \"exact\": false}, \"status\": true}, {\"description\": \"Confirm that the markdown file has a at least a minimum number of headers\", \"check\": \"CountMarkdownTags\", \"options\": {\"tag\": \"heading\", \"count\": 15, \"exact\": false}, \"status\": true}, {\"description\": \"Have at least a specific minimum of commits in repository\", \"check\": \"CountCommits\", \"options\": {\"count\": 5}, \"status\": true}]}"
                        }
                    ]
                },
                {
                    "repo-name": "content-search-Yanqiao4396",
                    "insights": [
                        {
                            "file": "hello-action-20230629-00",
                            "json": "{\"amount_correct\": 14, \"percentage_score\": 54, \"checks\": [{\"description\": \"Ensure that main.py file exists in the contactsearcher/contactsearcher/ directory\", \"check\": \"ConfirmFileExists\", \"status\": true}, {\"description\": \"Complete all TODOs, remove the TODO markers, and rewrite comments for main.py\", \"check\": \"MatchFileFragment\", \"options\": {\"fragment\": \"TODO\", \"count\": 0, \"exact\": true}, \"status\": false, \"diagnostic\": \"Found 6 fragment(s) in the main.py or the output while expecting exactly 0\"}, {\"description\": \"Create a sufficient number of docstring (i.e., multiple-line) comments in main.py\", \"check\": \"CountMultipleLineComments\", \"options\": {\"language\": \"Python\", \"count\": 2, \"exact\": false}, \"status\": true}, {\"description\": \"Create a sufficient number of single-line comments in main.py\", \"check\": \"CountSingleLineComments\", \"options\": {\"language\": \"Python\", \"count\": 4, \"exact\": false}, \"status\": true}, {\"description\": \"Ensure that search.py file exists in the contactsearcher/contactsearcher/ directory\", \"check\": \"ConfirmFileExists\", \"status\": true}, {\"description\": \"Complete all TODOs, remove the TODO markers, and rewrite comments for search.py\", \"check\": \"MatchFileFragment\", \"options\": {\"fragment\": \"TODO\", \"count\": 0, \"exact\": true}, \"status\": false, \"diagnostic\": \"Found 7 fragment(s) in the search.py or the output while expecting exactly 0\"}, {\"description\": \"Create a sufficient number of docstring (i.e., multiple-line) comments in search.py\", \"check\": \"CountMultipleLineComments\", \"options\": {\"language\": \"Python\", \"count\": 2, \"exact\": false}, \"status\": true}, {\"description\": \"Create a sufficient number of single-line comments in search.py\", \"check\": \"CountSingleLineComments\", \"options\": {\"language\": \"Python\", \"count\": 7, \"exact\": false}, \"status\": true}, {\"description\": \"Ensure that test_search.py file exists in the contactsearcher/tests/ directory\", \"check\": \"ConfirmFileExists\", \"status\": true}, {\"description\": \"Complete all TODOs, remove the TODO markers, and rewrite comments for test_search.py\", \"check\": \"MatchFileFragment\", \"options\": {\"fragment\": \"TODO\", \"count\": 0, \"exact\": true}, \"status\": true}, {\"description\": \"Create a sufficient number of docstring (i.e., multiple-line) comments in test_search.py\", \"check\": \"CountMultipleLineComments\", \"options\": {\"language\": \"Python\", \"count\": 5, \"exact\": false}, \"status\": true}, {\"description\": \"Create a sufficient number of single-line comments in test_search.py\", \"check\": \"CountSingleLineComments\", \"options\": {\"language\": \"Python\", \"count\": 5, \"exact\": false}, \"status\": false, \"diagnostic\": \"Found 0 comment(s) in the test_search.py or the output\"}, {\"description\": \"Ensure that the reflection.md file exists in the writing/ directory\", \"check\": \"ConfirmFileExists\", \"status\": true}, {\"description\": \"Complete all TODOs, remove the TODO markers, and rewrite comments for reflection.md\", \"check\": \"MatchFileFragment\", \"options\": {\"fragment\": \"TODO\", \"count\": 0, \"exact\": true}, \"status\": true}, {\"description\": \"Delete the 'Add Your Name Here' prompt in the reflection file\", \"check\": \"MatchFileFragment\", \"options\": {\"fragment\": \"Add Your Name Here\", \"count\": 0, \"exact\": true}, \"status\": false, \"diagnostic\": \"Found 1 fragment(s) in the reflection.md or the output while expecting exactly 0\"}, {\"description\": \"Write a minimum number of meaningful words in the reflection\", \"check\": \"CountFileWords\", \"options\": {\"count\": 500, \"exact\": false}, \"status\": false, \"diagnostic\": \"Found 279 word(s) in total of file reflection.md\"}, {\"description\": \"Confirm that the markdown file has the correct number of headers\", \"check\": \"CountMarkdownTags\", \"options\": {\"tag\": \"heading\", \"count\": 14, \"exact\": false}, \"status\": true}, {\"description\": \"Confirm that the markdown file has the correct number of fenced code blocks\", \"check\": \"CountMarkdownTags\", \"options\": {\"tag\": \"code_block\", \"count\": 4, \"exact\": false}, \"status\": false, \"diagnostic\": \"Found 0 tag(s) in the reflection.md file\"}, {\"description\": \"Have at least a specific minimum of commits in repository\", \"check\": \"CountCommits\", \"options\": {\"count\": 10}, \"status\": false, \"diagnostic\": \"Found 8 commit(s) in the Git repository\"}, {\"description\": \"Pass the source code formatting checks run by black\", \"command\": \"cd contactsearcher && poetry run task black\", \"status\": true}, {\"description\": \"Pass the linting checks run by flake8\", \"command\": \"cd contactsearcher && poetry run task flake8\", \"status\": false, \"diagnostic\": \"contactsearcher/main.py:8:2: F821 undefined name 'cli'\\n     contactsearcher/main.py:10:28: F821 undefined name 'typer'\\n     contactsearcher/main.py:11:20: F821 undefined name 'Optional'\\n     contactsearcher/main.py:11:29: F821 undefined name 'Path'\\n     contactsearcher/main.py:11:37: F821 undefined name 'typer'\\n     contactsearcher/main.py:19:9: F821 undefined name 'typer'\\n     contactsearcher/main.py:20:15: F821 undefined name 'typer'\\n     contactsearcher/main.py:25:9: F821 undefined name 'typer'\\n     contactsearcher/main.py:30:9: F821 undefined name 'typer'\\n     contactsearcher/main.py:32:5: F821 undefined name 'typer'\\n     contactsearcher/main.py:33:5: F821 undefined name 'typer'\\n     contactsearcher/search.py:5:1: F401 'csv' imported but unused\"}, {\"description\": \"Pass the import checks run by isort\", \"command\": \"cd contactsearcher && poetry run task isort\", \"status\": false, \"diagnostic\": \"ERROR: /home/runner/work/content-search-Yanqiao4396/content-search-Yanqiao4396/contactsearcher/contactsearcher/search.py Imports are incorrectly sorted and/or formatted.\"}, {\"description\": \"Pass the linting checks run by mypy\", \"command\": \"cd contactsearcher && poetry run task mypy\", \"status\": false, \"diagnostic\": \"contactsearcher/main.py:8: error: Name \\\"cli\\\" is not defined\\n     contactsearcher/main.py:10: error: Name \\\"typer\\\" is not defined\\n     contactsearcher/main.py:11: error: Name \\\"Optional\\\" is not defined\\n     contactsearcher/main.py:11: note: Did you forget to import it from \\\"typing\\\"? (Suggestion: \\\"from typing import Optional\\\")\\n     contactsearcher/main.py:11: error: Name \\\"Path\\\" is not defined\\n     contactsearcher/main.py:11: error: Name \\\"typer\\\" is not defined\\n     contactsearcher/main.py:19: error: Name \\\"typer\\\" is not defined\\n     contactsearcher/main.py:20: error: Name \\\"typer\\\" is not defined\\n     contactsearcher/main.py:25: error: Name \\\"typer\\\" is not defined\\n     contactsearcher/main.py:30: error: Name \\\"typer\\\" is not defined\\n     contactsearcher/main.py:32: error: Name \\\"typer\\\" is not defined\\n     contactsearcher/main.py:33: error: Name \\\"typer\\\" is not defined\\n     Found 11 errors in 1 file (checked 5 source files)\"}, {\"description\": \"Pass the linting checks run by pydocstyle\", \"command\": \"cd contactsearcher && poetry run task pydocstyle\", \"status\": true}, {\"description\": \"Pass the linting checks run by pylint\", \"command\": \"cd contactsearcher && poetry run task pylint\", \"status\": false, \"diagnostic\": \"************* Module contactsearcher.search\\n     contactsearcher/search.py:8:31: W0613: Unused argument 'job_description' (unused-argument)\\n     contactsearcher/search.py:8:53: W0613: Unused argument 'contacts' (unused-argument)\\n     \\n     -----------------------------------\\n     Your code has been rated at 9.55/10\"}, {\"description\": \"Pass the linting checks run by pymarkdown\", \"command\": \"cd contactsearcher && poetry run task markdownlint\", \"status\": false, \"diagnostic\": \"../README.md:2:1: MD012: Multiple consecutive blank lines [Expected: 1, Actual: 2] (no-multiple-blanks)\"}]}"
                        }
                    ]
                }
            ]
        },
        {
            "org-name": "allegheny-haunted-classroom",
            "repositories": [
                {
                    "repo-name": "object-oriented-Yanqiao4396",
                    "insights": [
                        {
                            "file": "insight-20230629-00",
                            "json": "{\"amount_correct\": 12, \"percentage_score\": 55, \"checks\": [{\"description\": \"Ensure that the create-dog-with-class.py file exists in the source/ directory\", \"check\": \"ConfirmFileExists\", \"status\": true}, {\"description\": \"Complete all TODOs, remove the TODO markers, and rewrite comments for create-dog-with-class.py\", \"check\": \"MatchFileFragment\", \"options\": {\"fragment\": \"TODO\", \"count\": 0, \"exact\": true}, \"status\": true}, {\"description\": \"Create a sufficient number of docstring (i.e., multiple-line) comments in create-dog-with-class.py\", \"check\": \"CountMultipleLineComments\", \"options\": {\"language\": \"Python\", \"count\": 2, \"exact\": false}, \"status\": false, \"diagnostic\": \"Found 0 comment(s) in the create-dog-with-class.py or the output\"}, {\"description\": \"Create a sufficient number of single-line comments in create-dog-with-class.py\", \"check\": \"CountSingleLineComments\", \"options\": {\"language\": \"Python\", \"count\": 6, \"exact\": false}, \"status\": true}, {\"description\": \"Ensure that the create-dog-with-dictionary.py file exists in the source/ directory\", \"check\": \"ConfirmFileExists\", \"status\": true}, {\"description\": \"Complete all TODOs, remove the TODO markers, and rewrite comments for create-dog-with-dictionary.py\", \"check\": \"MatchFileFragment\", \"options\": {\"fragment\": \"TODO\", \"count\": 0, \"exact\": true}, \"status\": false, \"diagnostic\": \"Found 8 fragment(s) in the create-dog-with-dictionary.py or the output while expecting exactly 0\"}, {\"description\": \"Create a sufficient number of docstring (i.e., multiple-line) comments in create-dog-with-dictionary.py\", \"check\": \"CountMultipleLineComments\", \"options\": {\"language\": \"Python\", \"count\": 1, \"exact\": false}, \"status\": false, \"diagnostic\": \"Found 0 comment(s) in the create-dog-with-dictionary.py or the output\"}, {\"description\": \"Create a sufficient number of single-line comments in create-dog-with-dictionary.py\", \"check\": \"CountSingleLineComments\", \"options\": {\"language\": \"Python\", \"count\": 5, \"exact\": false}, \"status\": true}, {\"description\": \"Ensure that the create-dog-with-list.py file exists in the source/ directory\", \"check\": \"ConfirmFileExists\", \"status\": true}, {\"description\": \"Complete all TODOs, remove the TODO markers, and rewrite comments for create-dog-with-list.py\", \"check\": \"MatchFileFragment\", \"options\": {\"fragment\": \"TODO\", \"count\": 0, \"exact\": true}, \"status\": false, \"diagnostic\": \"Found 8 fragment(s) in the create-dog-with-list.py or the output while expecting exactly 0\"}, {\"description\": \"Create a sufficient number of docstring (i.e., multiple-line) comments in create-dog-with-list.py\", \"check\": \"CountMultipleLineComments\", \"options\": {\"language\": \"Python\", \"count\": 1, \"exact\": false}, \"status\": false, \"diagnostic\": \"Found 0 comment(s) in the create-dog-with-list.py or the output\"}, {\"description\": \"Create a sufficient number of single-line comments in create-dog-with-list.py\", \"check\": \"CountSingleLineComments\", \"options\": {\"language\": \"Python\", \"count\": 4, \"exact\": false}, \"status\": true}, {\"description\": \"Ensure that the reflection.md file exists in the writing/ directory\", \"check\": \"ConfirmFileExists\", \"status\": true}, {\"description\": \"Complete all TODOs, remove the TODO markers, and rewrite comments for the reflection\", \"check\": \"MatchFileFragment\", \"options\": {\"fragment\": \"TODO\", \"count\": 0, \"exact\": true}, \"status\": true}, {\"description\": \"Delete the 'Add Your Name Here' prompt in the reflection file\", \"check\": \"MatchFileFragment\", \"options\": {\"fragment\": \"Add Your Name Here\", \"count\": 0, \"exact\": true}, \"status\": false, \"diagnostic\": \"Found 1 fragment(s) in the reflection.md or the output while expecting exactly 0\"}, {\"description\": \"Confirm that the markdown file has the correct number of headers\", \"check\": \"CountMarkdownTags\", \"options\": {\"tag\": \"heading\", \"count\": 7, \"exact\": false}, \"status\": true}, {\"description\": \"Confirm that the markdown file has the correct number of fenced code blocks\", \"check\": \"CountMarkdownTags\", \"options\": {\"tag\": \"code_block\", \"count\": 3, \"exact\": false}, \"status\": false, \"diagnostic\": \"Found 0 tag(s) in the reflection.md file\"}, {\"description\": \"Write a minimum number of meaningful words (100) in the reflection\", \"check\": \"CountFileWords\", \"options\": {\"count\": 100, \"exact\": false}, \"status\": true}, {\"description\": \"Have at least a specific minimum of commits in repository\", \"check\": \"CountCommits\", \"options\": {\"count\": 5}, \"status\": true}, {\"description\": \"Run the program and check the correct number of output lines\", \"check\": \"CountCommandOutput\", \"options\": {\"command\": \"python source/create-dog-with-class.py\", \"count\": 13, \"exact\": true}, \"status\": false, \"diagnostic\": \"Found 0 line(s) in the file or the output\"}, {\"description\": \"Run the program and check the correct number of output lines\", \"check\": \"CountCommandOutput\", \"options\": {\"command\": \"python source/create-dog-with-dictionary.py\", \"count\": 7, \"exact\": true}, \"status\": false, \"diagnostic\": \"Found 1 line(s) in the file or the output\"}, {\"description\": \"Run the program and check the correct number of output lines\", \"check\": \"CountCommandOutput\", \"options\": {\"command\": \"python source/create-dog-with-list.py\", \"count\": 7, \"exact\": true}, \"status\": false, \"diagnostic\": \"Found 1 line(s) in the file or the output\"}]}"
                        }
                    ]
                }
            ]
        }
    ]
}